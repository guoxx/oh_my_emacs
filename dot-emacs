(require 'package)
(add-to-list 'package-archives '("marmalade" . "http://marmalade-repo.org/packages/") t)
(add-to-list 'package-archives '("melpa" . "http://melpa.milkbox.net/packages/") t)
(package-initialize)

(setq userdata-dir "~/.emacs.d/userdata/")

(setq oh-my-emacs-init-dir "~/.emacs.d/init/")
(setq oh-my-emacs-init-files '(
                               "bootstrap.el"
                               "os.el"
                               "bmk.el"

                               "objc.el"
                               "lua.el"
                               "scheme.el"
                               "yin.el"
                               "dired.el"
                               "ibuffer.el"

                               "cedet.el"
                               "auto-cmpl.el"

                               "util.el"
                               "init.el"
                               "custom-key.el"
                               "mac.el"

                               "prog.el"
                               ))

(mapc 'load (mapcar (lambda (filename) (concat oh-my-emacs-init-dir filename)) oh-my-emacs-init-files))
;; (mapc 'load (directory-files "~/.emacs.d/init" t "^[a-zA-Z0-9].*.el$"))

(if (window-system)
    (progn
      ;; startup fullscreen
      (custom-set-variables
       '(initial-frame-alist (quote ((fullscreen . maximized)))))
      (setq default-frame-alist '((font . "Source Code Pro-14:light")))
      (set-fontset-font "fontset-default" 'gb18030' ("STHeiti" . "unicode-bmp"))))

;; (mapc
;;  (lambda (face)
;;    (set-face-attribute face nil :weight 'light :underline nil))
;;  (face-list))

(put 'upcase-region 'disabled nil)
(put 'downcase-region 'disabled nil)
